[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Documentation stream intended for use within the gulp system.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 62,
          "offset": 61
        }
      }
    },
    "tags": [
      {
        "title": "name",
        "description": null,
        "lineNumber": 3,
        "name": "documentation"
      },
      {
        "title": "param",
        "description": "output options",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "either 'html', 'md', 'json', or 'docset'",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "options.format"
      },
      {
        "title": "param",
        "description": "custom filename for md or json output",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "options.filename"
      },
      {
        "title": "param",
        "description": "your custom instance of documentation.js",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "documentation"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "stream.Transform"
        }
      },
      {
        "title": "example",
        "description": "var documentation = require('./'),\n    gulp = require('gulp');\n\ngulp.task('documentation', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'html'\n    }))\n    .pipe(gulp.dest('documentation'));\n});\n\n// documentation with JSON output, default filename API.md\ngulp.task('documentation-json', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'json'\n    }))\n    .pipe(gulp.dest('documentation'));\n});\n\n// documentation with markdown output, default filename API.md\ngulp.task('documentation-md', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'md'\n    }))\n    .pipe(gulp.dest('documentation'));\n});\n\n\n// documentation with JSON output, default filename API.md and custom Documentation instance\nvar documentation = require('gulp-documentation'),\n    $documentation = require('documentation');\n\n\ngulp.task('documentation-json', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'json'\n    }, $documentation))\n    .pipe(gulp.dest('documentation'));\n});",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 4,
        "column": 0
      },
      "end": {
        "line": 57,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 95,
          "column": 2
        }
      },
      "file": "/Users/fchasen/Repos/gulp-documentation/index.js"
    },
    "name": "documentation",
    "params": [
      {
        "name": "options",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "output options",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "name": "options.format",
            "lineNumber": 5,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "either 'html', 'md', 'json', or 'docset'",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 41,
                          "offset": 40
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "name": "options.filename",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "custom filename for md or json output",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 38,
                          "offset": 37
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        ]
      },
      {
        "name": "documentation",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "your custom instance of documentation.js",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "stream.Transform"
        }
      }
    ],
    "examples": [
      {
        "description": "var documentation = require('./'),\n    gulp = require('gulp');\n\ngulp.task('documentation', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'html'\n    }))\n    .pipe(gulp.dest('documentation'));\n});\n\n// documentation with JSON output, default filename API.md\ngulp.task('documentation-json', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'json'\n    }))\n    .pipe(gulp.dest('documentation'));\n});\n\n// documentation with markdown output, default filename API.md\ngulp.task('documentation-md', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'md'\n    }))\n    .pipe(gulp.dest('documentation'));\n});\n\n\n// documentation with JSON output, default filename API.md and custom Documentation instance\nvar documentation = require('gulp-documentation'),\n    $documentation = require('documentation');\n\n\ngulp.task('documentation-json', function () {\n  gulp.src('./index.js')\n    .pipe(documentation({\n      format: 'json'\n    }, $documentation))\n    .pipe(gulp.dest('documentation'));\n});"
      }
    ],
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "documentation"
      }
    ],
    "namespace": "documentation"
  }
]